What happens when you initialize a repository? Why do you need to do it?

	-Git create a hidden folder named .git, it need it to store meta-data about the repository to keep track of the files in it.

How is the staging area different from the working directory and the repository? What value do you think it offers?
	
	-The staging area doesn't contain every file in a directory and doesn't keep a snapshot of the directory at a given moment, it just contain the files we add to it to help keep track of the changes and to let us focus only on the file that we want to change, and it helps the developper make a commit per one ligical change.

How can you use the staging area to make sure you have one commit per logical change?

	-You can compare between the last commit and the staging area, which will help you keep track of the last changes you made, and you can always control the amout of changes that you made 

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
	-Branches are useful when you want to try or to add a feature that you are not sure about adding it to the project.

How do the diagrams help you visualize the branch structure?
	-Seeing the diagram help you identify where and when the branches got created, So you don't get lost between branchs.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
	-The result is a commit containig changes introduced in both branches, we represent it in the diagram that way 

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
	-Git's automatic merging will make the process faster and less frustrated so you won't care about when or where the changes have been introduced, but one probleme is when there is a conflict and git can't decide what to do.merges manually ca solve the probleme of conflicts but it can be time consuming and less productive

